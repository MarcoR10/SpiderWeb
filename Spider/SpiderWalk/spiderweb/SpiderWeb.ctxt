#BlueJ class context
comment0.target=SpiderWeb
comment0.text=\r\n\ Write\ a\ description\ of\ class\ SpiderWeb\ here.\r\n\ @author\ (Marco\ Alvarez-Paula\ Paez)\ \r\n\ @version\ (1.3)\r\n
comment1.params=strands\ radio
comment1.target=SpiderWeb(int,\ int)
comment1.text=\r\n\ Constructor\ para\ objetos\ de\ la\ clase\ SpiderWeb.\r\n\ \r\n\ @param\ strands\ N\u00FAmero\ de\ hilos\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ @param\ radio\ \ \ Radio\ de\ la\ tela\ de\ ara\u00F1a.\r\n
comment10.params=color
comment10.target=void\ delSpot(java.lang.String)
comment10.text=\r\n\ Elimina\ un\ punto\ de\ descanso\ de\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ color\ Color\ del\ punto\ de\ descanso\ a\ eliminar.\r\n
comment11.params=strand
comment11.target=void\ spiderSit(int)
comment11.text=\r\n\ Posiciona\ la\ ara\u00F1a\ en\ un\ hilo\ espec\u00EDfico.\r\n\ \r\n\ @param\ strand\ \u00CDndice\ del\ hilo\ donde\ se\ desea\ posicionar\ la\ ara\u00F1a.\r\n
comment12.params=advance
comment12.target=void\ spiderWalk(boolean)
comment12.text=\r\n\ Hace\ caminar\ a\ la\ ara\u00F1a\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ advance\ Indica\ si\ la\ ara\u00F1a\ debe\ avanzar\ o\ no.\r\n
comment13.params=
comment13.target=int[]\ spiderLasthPath()
comment13.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ \u00FAltimo\ camino\ de\ la\ ara\u00F1a.\r\n\ Este\ m\u00E9todo\ est\u00E1\ vac\u00EDo\ y\ siempre\ devuelve\ null,\ y\ deber\u00EDa\ ser\ implementado\ para\ devolver\ el\ \u00FAltimo\ camino\ registrado.\r\n\r\n\ @return\ un\ array\ de\ enteros\ que\ representa\ el\ \u00FAltimo\ camino\ de\ la\ ara\u00F1a.\r\n
comment14.params=
comment14.target=java.lang.String[]\ reachableSpots()
comment14.text=\r\n\ M\u00E9todo\ que\ devuelve\ los\ puntos\ de\ descanso\ alcanzables\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ Este\ m\u00E9todo\ calcula\ y\ devuelve\ los\ puntos\ de\ descanso\ en\ la\ tela\ de\ ara\u00F1a\ que\ pueden\ ser\ alcanzados\ por\ la\ ara\u00F1a\ en\ su\ posici\u00F3n\ actual.\ \r\n\ Un\ punto\ de\ descanso\ es\ alcanzable\ si\ la\ ara\u00F1a\ puede\ llegar\ a\ \u00E9l\ movi\u00E9ndose\ a\ trav\u00E9s\ de\ los\ hilos\ y\ puentes\ disponibles.\r\n\ \r\n\ @return\ Un\ array\ de\ cadenas\ que\ representa\ los\ puntos\ de\ descanso\ alcanzables.\ Si\ no\ hay\ puntos\ alcanzables,\ se\ devuelve\ un\ array\ vac\u00EDo.\r\n
comment15.params=
comment15.target=java.lang.String[]\ unusedBridges()
comment15.text=\r\n\ M\u00E9todo\ que\ devuelve\ los\ puentes\ no\ utilizados\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ Este\ m\u00E9todo\ calcula\ y\ devuelve\ los\ puentes\ que\ a\u00FAn\ no\ han\ sido\ utilizados\ por\ la\ ara\u00F1a\ en\ su\ recorrido.\ \r\n\ Un\ puente\ se\ considera\ no\ utilizado\ si\ la\ ara\u00F1a\ no\ ha\ pasado\ por\ \u00E9l\ durante\ su\ movimiento\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @return\ Un\ array\ de\ cadenas\ que\ representa\ los\ puentes\ no\ utilizados.\ Si\ no\ hay\ puentes\ no\ utilizados,\ se\ devuelve\ null.\r\n
comment16.params=
comment16.target=java.lang.String[]\ bridges()
comment16.text=\r\n\ M\u00E9todo\ que\ devuelve\ los\ nombres\ de\ todos\ los\ puentes\ disponibles.\r\n\ @return\ un\ array\ de\ cadenas\ que\ contiene\ los\ nombres\ de\ todos\ los\ puentes.\r\n
comment17.params=
comment17.target=java.lang.String[]\ spots()
comment17.text=\r\n\ M\u00E9todo\ que\ devuelve\ todos\ los\ puntos\ o\ lugares\ disponibles.\r\n\ @return\ un\ array\ de\ cadenas\ que\ contiene\ los\ nombres\ de\ todos\ los\ puntos\ o\ lugares.\r\n
comment18.params=
comment18.target=void\ makeVisible()
comment18.text=\r\n\ Hace\ visible\ la\ tela\ de\ ara\u00F1a,\ los\ puentes\ y\ la\ ara\u00F1a.\r\n
comment19.params=
comment19.target=void\ makeInvisible()
comment19.text=\r\n\ Hace\ invisible\ la\ tela\ de\ ara\u00F1a\ y\ los\ puentes.\r\n
comment2.params=strands\ favorite\ bridges
comment2.target=SpiderWeb(int,\ int,\ int[][])
comment2.text=\r\n\ Constructor\ para\ la\ clase\ SpiderWeb\ que\ inicializa\ una\ nueva\ tela\ de\ ara\u00F1a\ con\ ciertos\ par\u00E1metros.\r\n\r\n\ @param\ strands\ \ N\u00FAmero\ de\ hilos\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ @param\ favorite\ \u00CDndice\ del\ hilo\ favorito.\r\n\ @param\ bridges\ \ Matriz\ bidimensional\ que\ contiene\ la\ informaci\u00F3n\ de\ los\ puentes.\r\n
comment20.params=
comment20.target=boolean\ ok()
comment20.text=\r\n\ Verifica\ si\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n\ \r\n\ @return\ true\ si\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa,\ false\ en\ caso\ contrario.\r\n
comment21.params=
comment21.target=void\ finish()
comment21.text=\r\n\ Finaliza\ el\ programa.\r\n
comment22.params=spot
comment22.target=java.awt.Point\ getSpotPosition(java.lang.String)
comment22.text=\r\n\ M\u00E9todo\ privado\ que\ obtiene\ la\ posici\u00F3n\ de\ un\ punto\ de\ descanso\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @return\ Un\ objeto\ Point\ que\ representa\ las\ coordenadas\ (x,\ y)\ del\ punto\ de\ descanso.\ Si\ el\ punto\ no\ se\ encuentra,\ devuelve\ null.\r\n
comment23.params=
comment23.target=java.awt.Point\ getCurrentPosition()
comment23.text=\r\n\ Obtiene\ la\ posici\u00F3n\ actual\ de\ la\ ara\u00F1a\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @return\ Un\ objeto\ Point\ que\ representa\ las\ coordenadas\ (x,\ y)\ de\ la\ posici\u00F3n\ actual\ de\ la\ ara\u00F1a.\r\n
comment24.params=strandIndex\ distance
comment24.target=void\ draw(int,\ int)
comment24.text=\r\n\ Dibuja\ l\u00EDneas\ para\ representar\ hebras\ alrededor\ de\ un\ punto\ central.\r\n\r\n\ @param\ strandIndex\ El\ n\u00FAmero\ de\ hebras\ que\ se\ van\ a\ dibujar.\r\n\ @param\ distance\ \ \ \ La\ distancia\ desde\ el\ punto\ central\ hasta\ el\ extremo\ de\ cada\ hebra.\r\n
comment25.params=strandIndex\ distance
comment25.target=java.awt.Point\ getPointAtDistance(int,\ int)
comment25.text=\r\n\ Obtiene\ las\ coordenadas\ de\ un\ punto\ a\ una\ distancia\ espec\u00EDfica\ de\ un\ hilo.\r\n\ \r\n\ @param\ strandIndex\ \u00CDndice\ del\ hilo.\r\n\ @param\ distance\ \ \ \ Distancia\ desde\ el\ punto\ inicial\ del\ hilo.\r\n\ @return\ Punto\ con\ las\ coordenadas\ calculadas.\r\n
comment26.params=strand
comment26.target=java.awt.Point[]\ getCamino(int)
comment3.params=
comment3.target=void\ addStrand()
comment3.text=\r\n\ Aumenta\ el\ n\u00FAmero\ de\ hebra\ en\ 1\ y\ redibuja\ el\ objeto.\r\n\ Hace\ invisible\ al\ objeto\ actual\ antes\ de\ redibujarlo.\r\n
comment4.params=percentage
comment4.target=void\ enlarge(int)
comment4.text=\r\n\ Aumenta\ el\ radio\ del\ objeto\ en\ un\ porcentaje\ dado\ y\ redibuja\ el\ objeto.\r\n\ Hace\ invisible\ al\ objeto\ actual\ antes\ de\ redibujarlo.\r\n\ \r\n\ @param\ percentage\ porcentaje\ de\ aumento\ del\ radio.\r\n
comment5.params=color\ distance\ firstStand
comment5.target=void\ addBridge(java.lang.String,\ int,\ int)
comment5.text=\r\n\ Agrega\ un\ puente\ a\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ color\ \ \ \ \ \ Color\ del\ puente.\r\n\ @param\ distance\ \ \ Distancia\ desde\ el\ primer\ hilo.\r\n\ @param\ firstStand\ \u00CDndice\ del\ primer\ hilo.\r\n
comment6.params=type\ color\ distance\ firstStand
comment6.target=void\ addBridge(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.text=\r\n\ Agrega\ un\ puente\ a\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ type\ \ \ \ \ \ \ Tipo\ de\ puente\ (normal,\ walk,\ fixed,\ mobile).\r\n\ @param\ color\ \ \ \ \ \ Color\ del\ puente.\r\n\ @param\ distance\ \ \ Distancia\ desde\ el\ primer\ hilo.\r\n\ @param\ firstStand\ \u00CDndice\ del\ primer\ hilo.\r\n
comment7.params=color\ distance
comment7.target=void\ relocateBridge(java.lang.String,\ int)
comment7.text=\r\n\ Mueve\ un\ puente\ existente\ en\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ color\ \ \ \ Color\ del\ puente\ a\ mover.\r\n\ @param\ distance\ Nueva\ distancia\ desde\ el\ primer\ hilo.\r\n
comment8.params=color
comment8.target=void\ delBridge(java.lang.String)
comment8.text=\r\n\ Elimina\ un\ puente\ de\ la\ tela\ de\ ara\u00F1a.\r\n\ \r\n\ @param\ color\ Color\ del\ puente\ a\ eliminar.\r\n
comment9.params=color\ strandIndex
comment9.target=void\ addSpot(java.lang.String,\ int)
comment9.text=\r\n\ Agrega\ un\ punto\ de\ descanso\ en\ un\ hilo\ espec\u00EDfico.\r\n\ \r\n\ @param\ color\ \ \ \ \ \ \ Color\ del\ punto\ de\ descanso.\r\n\ @param\ strandIndex\ \u00CDndice\ del\ hilo\ donde\ se\ desea\ agregar\ el\ punto.\r\n
numComments=27
